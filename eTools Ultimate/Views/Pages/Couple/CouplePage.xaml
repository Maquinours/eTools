<Page
    x:Class="eTools_Ultimate.Views.Pages.CouplePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:eTools_Ultimate.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="CouplePage"
    d:DataContext="{d:DesignInstance local:CouplePage, IsDesignTimeCreatable=False}"
    d:DesignHeight="768"
    d:DesignWidth="1024"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- Common Styles -->
        <Style x:Key="InfoIconStyle" TargetType="ui:SymbolIcon">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
        </Style>

        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,15,0,15"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        </Style>

        <!-- ListViewItem Style -->
        <Style x:Key="CoupleListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Margin" Value="0,1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Left Side - Search and List -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Search Box -->
            <ui:TextBox 
                Grid.Row="0"
                Margin="15,15,15,10"
                PlaceholderText="Couple suchen..."
                Icon="Search24"
                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                <ui:TextBox.Resources>
                    <Style TargetType="ui:SymbolIcon">
                        <Setter Property="FontSize" Value="13"/>
                    </Style>
                </ui:TextBox.Resources>
            </ui:TextBox>

            <!-- Items List -->
            <Border 
                Grid.Row="1"
                Margin="15,0,15,15"
                CornerRadius="8"
                Background="{DynamicResource ControlFillColorDefaultBrush}"
                BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                BorderThickness="1">
                <TabControl Background="Transparent" BorderThickness="0">
                    <TabItem Header="Allgemein">
                        <ListView 
                            x:Name="LevelListView"
                            BorderThickness="0"
                            Background="Transparent"
                            ItemsSource="{Binding ViewModel.LevelRequirements}"
                            SelectedIndex="{Binding ViewModel.SelectedLevel, Mode=TwoWay}"
                            SelectionChanged="LevelListView_SelectionChanged">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Level " />
                                        <TextBlock Text="{Binding IndexOf}" />
                                        <TextBlock Text=" - " />
                                        <TextBlock Text="{Binding}" />
                                        <TextBlock Text=" EP" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource CoupleListViewItemStyle}" />
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </TabItem>
                    <TabItem Header="Items">
                        <ListView 
                            x:Name="ItemsListView"
                            BorderThickness="0"
                            Background="Transparent"
                            ItemsSource="{Binding ViewModel.FilteredItems}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding ItemName}" Grid.Column="0" />
                                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                                            <TextBlock Text="{Binding GenderText}" Margin="10,0" />
                                            <TextBlock Text="{Binding Probability}" Foreground="{DynamicResource AccentButtonBackground}" />
                                            <TextBlock Text="%" Foreground="{DynamicResource AccentButtonBackground}" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem" BasedOn="{StaticResource CoupleListViewItemStyle}" />
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>

        <!-- Separator -->
        <GridSplitter Grid.Column="1"
                      Width="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Background="{DynamicResource ControlElevationBorderBrush}"/>

        <!-- Right Side - Level Information and Skills -->
        <Grid Grid.Column="2" Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Level Information Header -->
            <ui:TextBlock 
                Grid.Row="0" 
                FontTypography="Title"
                FontSize="24"
                Margin="0,0,0,15"
                Text="Level Informationen" />

            <!-- Level Information Chart -->
            <ui:Card Grid.Row="1" Padding="15" Margin="0,0,0,15">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Level:" Margin="0,0,10,5" FontWeight="SemiBold" />
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ViewModel.SelectedLevel}" />
                        
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="BenÃ¶tigte EP:" Margin="0,0,10,5" FontWeight="SemiBold" />
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ViewModel.LevelRequirements[ViewModel.SelectedLevel]}" />
                        
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Power Level:" Margin="0,0,10,5" FontWeight="SemiBold" />
                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ViewModel.CurrentPowerLevel}" />
                        
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Bless Level:" Margin="0,0,10,5" FontWeight="SemiBold" />
                        <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding ViewModel.CurrentBlessLevel}" />
                        
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Miracle Level:" Margin="0,0,10,5" FontWeight="SemiBold" />
                        <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding ViewModel.CurrentMiracleLevel}" />
                    </Grid>
                    
                    <TextBlock Text="Erfahrungspunkte-Chart" HorizontalAlignment="Center" Margin="0,15,0,5" />
                    <Border Height="150" Background="{DynamicResource ControlFillColorSecondaryBrush}" CornerRadius="4">
                        <!-- Hier kÃ¶nnte spÃ¤ter ein Chart implementiert werden -->
                        <TextBlock Text="Visualisierung der Erfahrungspunkte Ã¼ber Level" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource TextFillColorSecondaryBrush}" />
                    </Border>
                </StackPanel>
            </ui:Card>

            <!-- Skill Freischaltungen -->
            <ui:TextBlock 
                Grid.Row="2" 
                FontTypography="Title"
                FontSize="18"
                Margin="0,0,0,10"
                Text="Skill Freischaltungen" />

            <!-- Skill Tabs -->
            <ui:Card Grid.Row="3" Padding="0" Margin="0,0,0,0">
                <TabControl Background="Transparent" BorderThickness="0">
                    <TabItem Header="Couple Level">
                        <DataGrid 
                            AutoGenerateColumns="False"
                            IsReadOnly="True"
                            Background="Transparent"
                            BorderThickness="0"
                            Margin="10"
                            GridLinesVisibility="Horizontal"
                            HorizontalGridLinesBrush="{DynamicResource ControlElevationBorderBrush}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Level" Width="Auto" />
                                <DataGridTextColumn Header="Geschlecht" Width="Auto" />
                                <DataGridTextColumn Header="Dauer (Std.)" Width="Auto" />
                                <DataGridTextColumn Header="Menge" Width="Auto" />
                                <DataGridTextColumn Header="Wahrscheinlichkeit" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Power Level">
                        <DataGrid 
                            AutoGenerateColumns="False"
                            IsReadOnly="True"
                            Background="Transparent"
                            BorderThickness="0"
                            Margin="10"
                            GridLinesVisibility="Horizontal"
                            HorizontalGridLinesBrush="{DynamicResource ControlElevationBorderBrush}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Level" Width="Auto" />
                                <DataGridTextColumn Header="Beschreibung" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Bless Level">
                        <DataGrid 
                            AutoGenerateColumns="False"
                            IsReadOnly="True"
                            Background="Transparent"
                            BorderThickness="0"
                            Margin="10"
                            GridLinesVisibility="Horizontal"
                            HorizontalGridLinesBrush="{DynamicResource ControlElevationBorderBrush}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Level" Width="Auto" />
                                <DataGridTextColumn Header="Beschreibung" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="Miracle Level">
                        <DataGrid 
                            AutoGenerateColumns="False"
                            IsReadOnly="True"
                            Background="Transparent"
                            BorderThickness="0"
                            Margin="10"
                            GridLinesVisibility="Horizontal"
                            HorizontalGridLinesBrush="{DynamicResource ControlElevationBorderBrush}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Level" Width="Auto" />
                                <DataGridTextColumn Header="Beschreibung" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </ui:Card>
        </Grid>
    </Grid>
</Page> 