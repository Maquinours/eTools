<Page
    x:Class="eTools_Ultimate.Views.Pages.GiftboxPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:eTools_Ultimate.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="GiftboxPage"
    d:DataContext="{d:DesignInstance local:GiftboxPage, IsDesignTimeCreatable=False}"
    d:DesignHeight="768"
    d:DesignWidth="1024"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">

    <Page.Resources>
        <!-- Common Styles -->
        <Style x:Key="InfoIconStyle" TargetType="ui:SymbolIcon">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}"/>
        </Style>

        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,15,0,15"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
        </Style>

        <!-- ListViewItem Style -->
        <Style x:Key="GiftboxListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Margin" Value="0,1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Badge Style -->
        <Style x:Key="ItemCountBadgeStyle" TargetType="ui:Badge">
            <Setter Property="Appearance" Value="Secondary"/>
            <Setter Property="MinWidth" Value="28"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- TextBlock Style for Giftbox Names -->
        <Style x:Key="GiftboxNameStyle" TargetType="ui:TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
        </Style>
        
        <!-- DataTemplate for Giftbox ListView Items -->
        <DataTemplate x:Key="GiftboxListTemplate">
            <Grid Margin="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Width="32"
                        Height="32"
                        Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                        BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                        BorderThickness="1"
                        Margin="0,0,8,0">
                    <Image 
                        Stretch="Uniform"
                        Margin="2"
                        Source="{Binding Item.Icon}"/>
                </Border>
                <StackPanel Grid.Column="1"
                        VerticalAlignment="Center">
                    <TextBlock Text="{Binding Item.Name}"
                            FontWeight="SemiBold"
                            Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                    <TextBlock Text="{Binding Item.Id}" 
                            Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                            FontSize="12"/>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="RootGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>

        <!-- Left Side - ListView -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Search Bar -->
            <ui:TextBox 
                Grid.Row="0"
                PlaceholderText="Search giftbox..." 
                Icon="Search24"
                Margin="5,5,15,10"
                Text="{Binding ViewModel.SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <!-- Giftbox List -->
            <Border Grid.Row="1"
                    CornerRadius="8"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                    Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                    Margin="5,0,15,5">
                <ListView 
                    x:Name="GiftboxListView"
                    BorderThickness="0"
                    Background="Transparent"
                    ItemTemplate="{StaticResource GiftboxListTemplate}"
                    ItemsSource="{Binding ViewModel.GiftboxesView}"
                    IsSynchronizedWithCurrentItem="True"
                    SelectionChanged="GiftboxListView_SelectionChanged">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Border>
        </Grid>

        <!-- Separator -->
        <GridSplitter Grid.Column="1"
                      Width="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Background="{DynamicResource ControlElevationBorderBrush}"/>

        <!-- Right Side - DataGrid -->
        <Grid Grid.Column="2" Margin="15">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Header with Add Button -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ui:TextBlock 
                    Grid.Column="0" 
                    FontTypography="Title"
                    FontSize="24"
                    Margin="0,0,0,10" >
                    <Run Text="Items in"/>
                    <Run Text="{Binding SelectedItem.Item.Name, ElementName=GiftboxListView}"/>
                </ui:TextBlock>

                <ui:Button 
                    Grid.Column="1"
                    Content="Add Item"
                    Icon="Add24"
                    Appearance="Primary" />
            </Grid>

            <!-- Box Info with Info Icon -->
            <Grid Grid.Row="1" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ui:SymbolIcon 
                    Grid.Column="0"
                    Symbol="Box24"
                    FontSize="16"
                    Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                <ui:TextBlock 
                    Grid.Column="1"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    FontTypography="Caption" Margin="5,0,0,0" >
                    <Run Text="Items in box :"/>
                    <Run Text="{Binding SelectedItem.Items.Count, Mode=OneWay, ElementName=GiftboxListView}"/>
                </ui:TextBlock>
            </Grid>

            <!-- Probability information -->
            <ui:TextBlock 
                Grid.Row="2"
                Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                Margin="0,0,0,10">
                Total probability :
                <Run Text="{Binding SelectedItem.TotalProbability, Mode=OneWay, ElementName=GiftboxListView}" />
                (<Run Text="{Binding SelectedItem.TotalProbabilityPercent, Mode=OneWay, ElementName=GiftboxListView}" /><!-- -->%)
            </ui:TextBlock>

            <!-- Data Grid -->
            <ui:Card Grid.Row="3" Padding="10" Margin="0,0,0,0" VerticalAlignment="Top">
                <DataGrid 
                    ItemsSource="{Binding SelectedItem.Items, ElementName=GiftboxListView}"
                    AutoGenerateColumns="False"
                    IsReadOnly="True"
                    Background="Transparent"
                    BorderThickness="0"
                    GridLinesVisibility="Horizontal"
                    HorizontalGridLinesBrush="{DynamicResource ControlElevationBorderBrush}"
                    CanUserResizeColumns="True"
                    CanUserSortColumns="True"
                    VerticalAlignment="Top"
                    HeadersVisibility="Column">
                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Height" Value="40" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorSecondaryBrush}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="Padding" Value="10,5" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Item" Width="*" SortMemberPath="Item.Name">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid Margin="4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Width="32" 
                                            Height="32"
                                            Background="{DynamicResource CardBackgroundFillColorDefaultBrush}"
                                            BorderBrush="{DynamicResource ControlStrokeColorDefaultBrush}"
                                            BorderThickness="1"
                                            Margin="0,0,8,0">
                                            <Image
                                                Stretch="Uniform"
                                                Margin="2"
                                                Source="{Binding Item.Icon}"/>
                                        </Border>
                                        <StackPanel
                                            Grid.Column="1"
                                            VerticalAlignment="Center">
                                            <TextBlock
                                                Text="{Binding Item.Name}"
                                                FontWeight="SemiBold"
                                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                                            <TextBlock
                                                Text="{Binding Item.Id}"
                                                Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                                                FontSize="12"/>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn 
                            Header="Probability" 
                            Binding="{Binding DwProbability}" 
                            Width="Auto" />
                        <DataGridTextColumn 
                            Header="Quantity" 
                            Binding="{Binding NNum}" 
                            Width="Auto" />
                        <DataGridTextColumn 
                            Header="%" 
                            Binding="{Binding ProbabilityPercent}" 
                            Width="Auto" />
                        <DataGridTemplateColumn 
                            Header="Actions" 
                            Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <ui:Button
                                            Appearance="Secondary"
                                            Icon="Edit24"
                                            Padding="8"
                                            Margin="0,0,4,0"
                                            ToolTip="Edit" />
                                        <ui:Button
                                            Appearance="Danger"
                                            Icon="Delete24"
                                            Padding="8"
                                            ToolTip="Delete" />
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ui:Card>
        </Grid>
    </Grid>
</Page> 